@using Sanabel.Presentation.MVC.Models
@using Sanabel.Presentation.Localization
@model LoginViewModel
@{
    ViewBag.Title = AccountResource.Login;
    Layout = "~/Views/shared/_LoginLayout.cshtml";
}

@using (Html.BeginForm("Login", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="card-body card-login">
        <h1>@AccountResource.Login</h1>
        <p class="text-muted">@AccountResource.LoginTip</p>
        <div class="input-group mb-3">
            <span class="input-group-addon"><i class="icon-user"></i></span>
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = AccountResource.Email })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <div class="input-group mb-4">
            <span class="input-group-addon"><i class="icon-lock"></i></span>
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = AccountResource.Password })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="input-group mb-4">
            <label>
                @Html.CheckBoxFor(model => model.RememberMe)
                @Html.DisplayNameFor(model => model.RememberMe)
            </label>
        </div>
        <div class="row">
            <div class="col-6">
                <button type="submit" class="btn btn-primary px-4">@AccountResource.Login</button>
            </div>
            <div class="col-6 text-left">
                @Html.ActionLink(AccountResource.ForgetPasswordLinkText, "ForgotPassword"
                                                                      , "Account", new { @class = "btn btn-link px-0" })
            </div>
        </div>
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="invalid-feedback" style="display:block">
                @ViewBag.ErrorMessage
            </div>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

