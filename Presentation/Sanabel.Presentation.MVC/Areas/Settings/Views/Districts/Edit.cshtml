@model CommonSettings.ViewModels.DistrictViewModel
@using BusinessSolutions.Localization;
@{
    ViewBag.Title = CommonResources.Districts;
}



@Html.Partial("_TempDataHeaderMessages")
@Html.Partial("_ViewDataHeaderMessages")
@using (Html.BeginForm("Edit", "Districts", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.CountryId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.CountryId
                    , new SelectList(Enumerable.Empty<SelectListItem>())
                    , CommonResources.All
                    , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.RegionId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.RegionId
                    , new SelectList(Enumerable.Empty<SelectListItem>())
                    , CommonResources.All
                    , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.CityId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.CityId
                    , new SelectList(Enumerable.Empty<SelectListItem>())
                    , CommonResources.All
                    , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.DistricName)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.DistricName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DistricName, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.DistricNameEn)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.DistricNameEn, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DistricNameEn, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.DistricCode)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.DistricCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DistricCode, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">&nbsp;</label>
        <div class="col-md-10">
            <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-save"></i> @CommonResources.Save</button>
            <button type="reset" class="btn btn-sm btn-danger"><i class="fa fa-eraser"></i> @CommonResources.Reset</button>
            <a href="@Url.Action("Index")" class="btn btn-sm btn-info"><i class="fa fa-arrow-circle-left"></i> @CommonResources.BackToIndex</a>
        </div>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $('#CountryId').fillDropDownList({
                url: '@Url.Content("~/api/Settings/Places/Countries")',
                dataValeuProperty: 'countryId',
                dataTextProperty: 'countryName',
                selectedValue: '@Model.CountryId',
                callback: fillRegions
            }).change(function () {
                fillRegions($(this).val());
                });

            $('#RegionId').change(function () {
                fillCities($(this).val());
            });
        });

        function fillRegions(countryId)
        {
            $('#RegionId').fillDropDownList({
                url: '@Url.Content("~/api/Settings/Places/CountryRegions")?countryId=' + countryId,
                dataValeuProperty: 'regionId',
                dataTextProperty: 'regionName',
                selectedValue: '@Model.RegionId',
                callback: fillCities
            });
        }

        function fillCities(regionId)
        {
            $('#RegionId').fillDropDownList({
                url: '@Url.Content("~/api/Settings/Places/RegionCities")?regionId=' + regionId,
                dataValeuProperty: 'cityId',
                dataTextProperty: 'cityName',
                selectedValue: '@Model.RegionId',
            });
        }

    </script>
}
