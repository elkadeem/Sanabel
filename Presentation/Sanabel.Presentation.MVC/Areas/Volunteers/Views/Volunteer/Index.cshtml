@model Security.Application.Models.SearchVolunteersViewModel
@using PagedList.Mvc
@using BusinessSolutions.Localization
@using Security.Application.Localization


@{
    ViewBag.Title = "Users";
}

@Html.Partial("_TempDataHeaderMessages")
@Html.Partial("_ViewDataHeaderMessages")
<!-- form ############################################################### -->
@using (Html.BeginForm("Index", "Volunteer", FormMethod.Get, new { @class = "form-horizontal" }))
{
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.UserName)</label>
        <div class="col-md-4">
            @Html.TextBoxFor(c => c.UserName, new { @class = "form-control" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.UserName)</label>
        <div class="col-md-4">
            @Html.TextBoxFor(c => c.Email, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(c => c.CountryId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.CountryId
                         , new SelectList(Enumerable.Empty<SelectListItem>())
                         , CommonResources.All
                         , new { @class = "form-control" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(c => c.RegionId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.RegionId
                         , new SelectList(Enumerable.Empty<SelectListItem>())
                         , CommonResources.All
                         , new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.CityId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.CityId
                         , new SelectList(Enumerable.Empty<SelectListItem>())
                         , CommonResources.All
                         , new { @class = "form-control" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.DistrictId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.DistrictId
                         , new SelectList(Enumerable.Empty<SelectListItem>())
                         , CommonResources.All
                         , new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">&nbsp;</label>
        <div class="col-md-10">
            <button type="submit" class="btn btn-sm btn-primary"><i class="fa fa-search"></i> @CommonResources.Search</button>
            <a href="@Url.Action("Create")" class="btn btn-sm btn-primary"><i class="fa fa-plus-circle"></i> @CommonResources.Add</a>
        </div>

    </div>
}
<!-- /.form ######################################################### -->
@if (Model.Items != null && Model.Items.Any())
{

    <table class="table table-responsive table-hover table-outline mb-0">
        <thead class="thead-default">
            <tr>
                <th>
                    @Html.Encode(SecurityResource.UserName)
                </th>
                <th>
                    @Html.Encode(SecurityResource.Email)
                </th>
                <th>
                    @Html.Encode(SecurityResource.FullName)
                </th>
                <th>
                    @Html.Encode(SecurityResource.Country)
                </th>
                <th>
                    @Html.Encode(SecurityResource.Region)
                </th>
                <th>
                    @Html.Encode(SecurityResource.City)
                </th>
                <th>
                    @Html.Encode(SecurityResource.District)
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Security.Application.Models.ViewVolunteerViewModel item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.Encode(item.UserName)
                    </td>
                    <td>
                        @Html.Encode(item.Email)
                    </td>
                    <td>
                        @Html.Encode(item.FullName)
                    </td>
                    <td>
                        @Html.Encode(item.CountryName)
                    </td>
                    <td>
                        @Html.Encode(item.RegionName)
                    </td>
                    <td>
                        @Html.Encode(item.CityName)
                    </td>
                    <td>
                        @Html.Encode(item.DistrictName)
                    </td>
                    <td>
                        <a href="@Url.Action("Edit", new { id = item.UserId })" class="btn btn-sm btn-primary"><i class="fa fa-pencil"></i> @CommonResources.Edit</a>
                        <a href="@Url.Action("Details", new { id = item.UserId})" class="btn btn-sm btn-success"><i class="fa fa-info-circle"></i> @CommonResources.Browse</a>
                        <a data-id="@item.UserId" class="btn btn-sm btn-danger btnDelete"><i class="fa fa-remove"></i> @CommonResources.Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.Items.PageCount > 1)
        {
            <div class="panel-footer clearfix">
                <div class="col-xs-4 search_results_text">
                    @System.String.Format(CommonResources.PageFromToMessage, Model.Items.PageNumber, Model.Items.PageCount)
                </div>

                @Html.PagedListPager(Model.Items, page => Url.Action("Index"
                         , new
                         {
                             PageIndex = page - 1,
                             CountryId = Model.CountryId,
                             RegionId = Model.RegionId,
                             UserName = Model.UserName,
                             Email = Model.Email,
                             CityId = Model.CityId,
                             DistrictId = Model.DistrictId
                         }), PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        }
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        @CommonResources.NoDataFound
    </div>
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $('.btnDelete').click(function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $('#deleteForm').attr('action', "@Url.Action("Delete", "Districts")/" + id
                    + "?returnurl=" + encodeURIComponent(window.location.href.replace(window.location.origin, "")));
                $('#confirmDeleteModal').modal('show');
            });
        });


        $(function () {
            fillCountries();
            $('#CountryId').change(function () {
                fillRegionsByCountryId($(this).val());
            });

            $('#RegionId').change(function () {
                fillCitiesByRegionId($(this).val());
            });

            $('#CityId').change(function () {
                fillDistrictsByCityId($(this).val());
            });
        });

        function fillCountries()
        {
            $.get("@Url.Action("GetAllCountries", "Countries", new { area = "Settings" })")
                .done(function (data) {
                    $('#CountryId:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.countryId,
                            text: item.countryName,
                        }).appendTo('#CountryId');
                    });

                    var countryId = @Model.CountryId;
                    $('#CountryId').val(countryId == 0 ? "" : countryId);
                    fillRegionsByCountryId(countryId);

                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });

        }

        function fillRegionsByCountryId(countryId)
        {
            $.get("@Url.Action("GetRegionsByCountryId", "Regions", new { area = "Settings" })" + "?countryId=" + countryId)
                .done(function (data) {
                    $('#RegionId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {
                        $('<option/>', {
                            'value': item.regionId,
                            text: item.regionName,
                        }).appendTo('#RegionId');
                    });

                    setRegionValue();

                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function fillCitiesByRegionId(regionId)
        {
            $.get("@Url.Action("GetCitiesByRegionId", "Cities", new { area = "Settings" })" + "?regionId=" + regionId)
                .done(function (data) {
                    $('#CityId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.cityId,
                            text: item.cityName,
                        }).appendTo('#CityId');
                    });

                    setCityValue();
                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function fillDistrictsByCityId(cityId)
        {
            $.get("@Url.Action("GetDistrictsByCityId", "Districts", new { area = "Settings" })" + "?cityId=" + cityId)
                .done(function (data) {
                    $('#DistrictId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.districtId,
                            text: item.districtName,
                        }).appendTo('#DistrictId');
                    });

                    setDistrictValue();
                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function setRegionValue()
        {
            var regionId = @Model.RegionId;
            if ($('#RegionId option[value="' + regionId + '"]').length > 0)
              $('#RegionId').val(regionId);
              else
                $('#RegionId').val("");

            fillCitiesByRegionId(regionId);
        }

        function setCityValue()
        {
            var cityId = @Model.CityId;
            if ($('#CityId option[value="' + cityId + '"]').length > 0)
                            $('#CityId').val(cityId);
                        else
                $('#CityId').val("");
            fillDistrictsByCityId(cityId);
        }

        function setDistrictValue()
        {
            var districtId = "@Model.DistrictId";
if ($('#DistrictId option[value="' + districtId + '"]').length > 0)
                $('#DistrictId').val(districtId);
                   else
                $('#DistrictId').val("");
            }


    </script>
}


<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-danger" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@CommonResources.DeleteConfirmationTitle</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>@CommonResources.DeleteConfirmation</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">@CommonResources.Cancel</button>
                <form id="deleteForm" method="post">
                    <button type="submit" class="btn btn-danger">@CommonResources.Delete</button>
                </form>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->