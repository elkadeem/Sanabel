@model Security.Application.Models.VolunteerViewModel
@using BusinessSolutions.Localization
@using Security.Application.Localization
@using BusinessSolutions.MVCCommon.Helpers;

@{
    ViewBag.Title = "تعديل مستخدم";
}

@Html.Partial("_TempDataHeaderMessages")
@Html.Partial("_ViewDataHeaderMessages")
@using (Html.BeginForm("Edit", "Volunteer", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.Email)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Email, new
            {
                htmlAttributes = new
                {
                    @class = "form-control"
              ,
                    style = "text-align:left;direction:ltr"
                }
            })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.FullName)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@SecurityResource.CountryId</label>
        <div class="col-md-4">
            <select id="CountryId" name="CountryId" class="form-control">
                <option value="">@CommonResources.Select</option>
            </select>
        </div>
        <label class="col-md-2 form-control-label text-left">@SecurityResource.RegionId</label>
        <div class="col-md-4">
            <select id="RegionId" name="RegionId" class="form-control">
                <option value="">@CommonResources.Select</option>
            </select>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.CityId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.CityId
                  , new SelectList(Enumerable.Empty<SelectListItem>())
                  , CommonResources.All
                  , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.DistrictId)</label>
        <div class="col-md-4">
            @Html.DropDownListFor(Model => Model.DistrictId
                  , new SelectList(Enumerable.Empty<SelectListItem>())
                  , CommonResources.All
                  , new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.Address)</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@Html.DisplayNameFor(model => model.Mobile)</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
        </div>
        <label class="col-md-2 form-control-label text-left"></label>
        <div class="col-md-4">
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">@SecurityResource.Roles</label>
        <div class="col-md-10">
            @Html.CheckBoxListFor(Model => Model.Roles, (IEnumerable<SelectListItem>)ViewBag.Roles, new { @class = "" })
            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <label class="col-md-2 form-control-label text-left">&nbsp;</label>
        <div class="col-md-10">
            <button type="submit" class="btn btn-sm btn-success"><i class="fa fa-save"></i> @CommonResources.Save</button>
            <button type="reset" class="btn btn-sm btn-danger"><i class="fa fa-eraser"></i> @CommonResources.Reset</button>
            <a href="@Url.Action("Index")" class="btn btn-sm btn-info"><i class="fa fa-arrow-circle-left"></i> @CommonResources.BackToIndex</a>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            fillCountries();
            $('#CountryId').change(function () {
                fillRegionsByCountryId($(this).val());
            });

            $('#RegionId').change(function () {
                fillCitiesByRegionId($(this).val());
            });

            $('#CityId').change(function () {
                fillDistrictsByCityId($(this).val());
            });


        });

        function fillCountries()
        {
            $.get("@Url.Action("GetAllCountries", "Countries", new { area = "Settings" })")
                .done(function (data) {
                    $('#CountryId:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.countryId,
                            text: item.countryName,
                        }).appendTo('#CountryId');
                    });

                    var countryId = @Model.CountryId;
                    $('#CountryId').val(countryId == 0 ? "" : countryId);
                    fillRegionsByCountryId(countryId);

                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });

        }

        function fillRegionsByCountryId(countryId)
        {
            $.get("@Url.Action("GetRegionsByCountryId", "Regions", new { area = "Settings" })" + "?countryId=" + countryId)
                .done(function (data) {
                    $('#RegionId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {
                        $('<option/>', {
                            'value': item.regionId,
                            text: item.regionName,
                        }).appendTo('#RegionId');
                    });

                    setRegionValue();

                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function fillCitiesByRegionId(regionId)
        {
            $.get("@Url.Action("GetCitiesByRegionId", "Cities", new { area = "Settings" })" + "?regionId=" + regionId)
                .done(function (data) {
                    $('#CityId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.cityId,
                            text: item.cityName,
                        }).appendTo('#CityId');
                    });

                    setCityValue();
                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function fillDistrictsByCityId(cityId)
        {
            $.get("@Url.Action("GetDistrictsByCityId", "Districts", new { area = "Settings" })" + "?cityId=" + cityId)
                .done(function (data) {
                    $('#DistrictId option:first-child ~ option').remove();
                    $.each(data, function (index, item) {

                        $('<option/>', {
                            'value': item.districtId,
                            text: item.districtName,
                        }).appendTo('#DistrictId');
                    });

                    setDistrictValue();
                }).fail(function (error) {
                    console.log(error);
                }).always(function () {
                });
        }

        function setRegionValue()
        {
            var regionId = @Model.RegionId;
            if ($('#RegionId option[value="' + regionId + '"]').length > 0)
              $('#RegionId').val(regionId);
              else
                $('#RegionId').val("");

            fillCitiesByRegionId(regionId);
        }

        function setCityValue()
        {
            var cityId = @Model.CityId;
            if ($('#CityId option[value="' + cityId + '"]').length > 0)
                            $('#CityId').val(cityId);
                        else
                $('#CityId').val("");
            fillDistrictsByCityId(cityId);
        }

        function setDistrictValue()
        {
            var districtId = "@Model.DistrictId";
if ($('#DistrictId option[value="' + districtId + '"]').length > 0)
                $('#DistrictId').val(districtId);
                   else
                $('#DistrictId').val("");
            }
    </script>
}
